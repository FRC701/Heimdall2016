// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<DoubleSolenoid> RobotMap::elevatorhaySqueeze;
std::shared_ptr<DigitalInput> RobotMap::elevatorrightHaySqueezeSensor;
std::shared_ptr<DigitalInput> RobotMap::elevatorleftHaySqueezeSensor;
std::shared_ptr<DoubleSolenoid> RobotMap::elevatorbrake;
std::shared_ptr<CANTalon> RobotMap::elevatorleftSpool;
std::shared_ptr<CANTalon> RobotMap::elevatorrightSpool;
std::shared_ptr<DigitalInput> RobotMap::chassisleftLightSensor;
std::shared_ptr<DigitalInput> RobotMap::chassisrightLightSensor;
std::shared_ptr<CANTalon> RobotMap::chassisleftFrontWheel;
std::shared_ptr<CANTalon> RobotMap::chassisleftRearWheel;
std::shared_ptr<CANTalon> RobotMap::chassisrightFrontWheel;
std::shared_ptr<CANTalon> RobotMap::chassisrightRearWheel;
std::shared_ptr<DoubleSolenoid> RobotMap::intakeactuator;
std::shared_ptr<CANTalon> RobotMap::intakeleftSpinner;
std::shared_ptr<CANTalon> RobotMap::intakerightSpinner;
std::shared_ptr<Relay> RobotMap::lightsheimdallGlow;
std::shared_ptr<Relay> RobotMap::lightsleftUnderGlow;
std::shared_ptr<Relay> RobotMap::lightsrightUnderGlow;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    elevatorhaySqueeze.reset(new DoubleSolenoid(0, 1, 6));
    lw->AddActuator("Elevator", "haySqueeze", elevatorhaySqueeze);
    
    elevatorrightHaySqueezeSensor.reset(new DigitalInput(2));
    lw->AddSensor("Elevator", "rightHaySqueezeSensor", elevatorrightHaySqueezeSensor);
    
    elevatorleftHaySqueezeSensor.reset(new DigitalInput(3));
    lw->AddSensor("Elevator", "leftHaySqueezeSensor", elevatorleftHaySqueezeSensor);
    
    elevatorbrake.reset(new DoubleSolenoid(0, 2, 5));
    lw->AddActuator("Elevator", "brake", elevatorbrake);
    
    elevatorleftSpool.reset(new CANTalon(2));
    lw->AddActuator("Elevator", "leftSpool", elevatorleftSpool);
    
    elevatorrightSpool.reset(new CANTalon(4));
    lw->AddActuator("Elevator", "rightSpool", elevatorrightSpool);
    
    chassisleftLightSensor.reset(new DigitalInput(0));
    lw->AddSensor("Chassis", "leftLightSensor", chassisleftLightSensor);
    
    chassisrightLightSensor.reset(new DigitalInput(1));
    lw->AddSensor("Chassis", "rightLightSensor", chassisrightLightSensor);
    
    chassisleftFrontWheel.reset(new CANTalon(5));
    lw->AddActuator("Chassis", "leftFrontWheel", chassisleftFrontWheel);
    
    chassisleftRearWheel.reset(new CANTalon(11));
    lw->AddActuator("Chassis", "leftRearWheel", chassisleftRearWheel);
    
    chassisrightFrontWheel.reset(new CANTalon(6));
    lw->AddActuator("Chassis", "rightFrontWheel", chassisrightFrontWheel);
    
    chassisrightRearWheel.reset(new CANTalon(12));
    lw->AddActuator("Chassis", "rightRearWheel", chassisrightRearWheel);
    
    intakeactuator.reset(new DoubleSolenoid(0, 0, 7));
    lw->AddActuator("Intake", "actuator", intakeactuator);
    
    intakeleftSpinner.reset(new CANTalon(8));
    lw->AddActuator("Intake", "leftSpinner", intakeleftSpinner);
    
    intakerightSpinner.reset(new CANTalon(7));
    lw->AddActuator("Intake", "rightSpinner", intakerightSpinner);
    
    lightsheimdallGlow.reset(new Relay(0));
    lw->AddActuator("Lights", "heimdallGlow", lightsheimdallGlow);
    
    lightsleftUnderGlow.reset(new Relay(1));
    lw->AddActuator("Lights", "leftUnderGlow", lightsleftUnderGlow);
    
    lightsrightUnderGlow.reset(new Relay(2));
    lw->AddActuator("Lights", "rightUnderGlow", lightsrightUnderGlow);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
